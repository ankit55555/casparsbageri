{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  /* Prevent horizontal overflow issues */
  .video-section {
    overflow-x: hidden;
    max-width: 100%;
    box-sizing: border-box;
  }

  .video-section__media {
    overflow: hidden;
    position: relative;
    max-width: 100%;
    box-sizing: border-box;
  }

  .video-section__media iframe,
  .video-section__media video {
    width: 100%;
    height: 100%;
    border: none;
    outline: none;
    max-width: 100%;
    box-sizing: border-box;
  }

  /* Ensure page width containers don't overflow */
  .page-width {
    max-width: 100%;
    overflow-x: hidden;
    box-sizing: border-box;
  }

  /* Global overflow prevention */
  body {
    overflow-x: hidden;
    max-width: 100vw;
  }

  /* Ensure all containers respect viewport width */
  .color-{{ section.settings.color_scheme }} {
    overflow-x: hidden;
    max-width: 100%;
  }

  /* Video height options */
  .video-section__media {
    {% if section.settings.video_height == 'small' %}
      height: 300px;
    {% elsif section.settings.video_height == 'medium' %}
      height: 400px;
    {% elsif section.settings.video_height == 'large' %}
      height: 500px;
    {% elsif section.settings.video_height == 'xlarge' %}
      height: 600px;
    {% elsif section.settings.video_height == 'fullscreen' %}
      height: 100vh;
    {% else %}
      height: auto;
    {% endif %}
  }

  /* Responsive height adjustments */
  @media screen and (max-width: 749px) {
    .video-section__media {
      {% if section.settings.video_height == 'small' %}
        height: 250px;
      {% elsif section.settings.video_height == 'medium' %}
        height: 300px;
      {% elsif section.settings.video_height == 'large' %}
        height: 350px;
      {% elsif section.settings.video_height == 'xlarge' %}
        height: 400px;
      {% elsif section.settings.video_height == 'fullscreen' %}
        height: 50vh;
      {% endif %}
    }
  }

  /* Hide video controls completely when option is enabled */
  .video-no-controls {
    pointer-events: none;
  }

  /* Hide all video controls for uploaded videos */
  .video-no-controls video::-webkit-media-controls {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-panel {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-play-button {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-timeline {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-current-time-display {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-time-remaining-display {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-mute-button {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-volume-slider {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-fullscreen-button {
    display: none !important;
  }

  /* Additional CSS for better control hiding */
  .video-no-controls video::-webkit-media-controls-overlay-play-button {
    display: none !important;
  }

  .video-no-controls video::-webkit-media-controls-enclosure {
    display: none !important;
  }

  /* Hide iframe controls for YouTube/Vimeo */
  .video-no-controls iframe {
    pointer-events: none;
  }
{%- endstyle -%}

{%- liquid
  assign video_id = section.settings.video.id | default: section.settings.video_url.id
  assign video_alt = section.settings.video.alt | default: section.settings.description
  assign alt = 'sections.video.load_video' | t: description: video_alt | escape
  assign poster = section.settings.video.preview_image | default: section.settings.cover_image

  if section.settings.video != null
    assign ratio_diff = section.settings.video.aspect_ratio | minus: poster.aspect_ratio | abs
    if ratio_diff < 0.01 and ratio_diff > 0
      assign fix_ratio = true
    endif
  endif
-%}

{%- capture sizes -%}
  {% if section.settings.full_width -%}
    100vw
  {%- else -%}
    (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px)
    calc(100vw - 10rem), 100vw
  {%- endif %}
{%- endcapture -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="video-section isolate{% unless section.settings.full_width %} page-width{% endunless %} section-{{ section.id }}-padding">
    <div
      {% if section.settings.full_width %}
        class="page-width"
      {% endif %}
    >
      {%- unless section.settings.heading == blank -%}
        <div class="title-wrapper title-wrapper--no-top-margin{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
          <h2 class="title inline-richtext {{ section.settings.heading_size }}">{{ section.settings.heading }}</h2>
        </div>
      {%- endunless -%}
    </div>
    <div
      class="video-section__media gradient global-media-settings{% if section.settings.full_width %} global-media-settings--full-width{% endif %}{% if fix_ratio %} media-fit-cover{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %} video-height-{{ section.settings.video_height }}"
      {% if poster != null and section.settings.video_height == 'auto' %}
        style="--ratio-percent: {{ 1 | divided_by: poster.aspect_ratio | times: 100 }}%;"
      {% endif %}
    >
      {%- if section.settings.video == null and section.settings.video_url != null -%}
        {%- liquid
          assign loop = ''
          if section.settings.enable_video_looping
            assign loop = '&loop=1&playlist=' | append: video_id
          endif
          assign controls_param = ''
          if section.settings.hide_video_controls
            assign controls_param = '&controls=0'
          endif
        -%}
        {%- if section.settings.video_url.type == 'youtube' -%}
          <iframe
            src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1&mute=1{{ controls_param }}&modestbranding=1&rel=0&showinfo=0{{ loop }}"
            class="js-youtube{% if section.settings.hide_video_controls %} video-no-controls{% endif %}"
            allow="autoplay; encrypted-media"
            allowfullscreen
            title="{{ section.settings.description | escape }}"
          ></iframe>
        {%- else -%}
          <iframe
            src="https://player.vimeo.com/video/{{ video_id }}?autoplay=1&muted=1{{ controls_param }}&title=0&byline=0&portrait=0{{ loop }}"
            class="js-vimeo{% if section.settings.hide_video_controls %} video-no-controls{% endif %}"
            allow="autoplay; encrypted-media"
            allowfullscreen
            title="{{ section.settings.description | escape }}"
          ></iframe>
        {%- endif -%}
      {%- else -%}
        {%- liquid
          assign show_controls = true
          if section.settings.hide_video_controls
            assign show_controls = false
          endif
        -%}
        {{
          section.settings.video
          | video_tag:
            image_size: '1100x',
            autoplay: true,
            loop: section.settings.enable_video_looping,
            controls: show_controls,
            muted: true
        }}
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.video.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.video.settings.heading.default",
      "label": "t:sections.video.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "t:sections.video.settings.enable_video_looping.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "hide_video_controls",
      "label": "Hide video controls",
      "info": "Hide video player controls to prevent overflow issues",
      "default": false
    },
    {
      "type": "select",
      "id": "video_height",
      "label": "Video height",
      "info": "Choose the height of the video player",
      "options": [
        {
          "value": "auto",
          "label": "Auto (maintain aspect ratio)"
        },
        {
          "value": "small",
          "label": "Small (300px)"
        },
        {
          "value": "medium",
          "label": "Medium (400px)"
        },
        {
          "value": "large",
          "label": "Large (500px)"
        },
        {
          "value": "xlarge",
          "label": "Extra Large (600px)"
        },
        {
          "value": "fullscreen",
          "label": "Fullscreen (100vh)"
        }
      ],
      "default": "auto"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__1.content"
    },
    {
      "type": "video",
      "id": "video",
      "label": "t:sections.video.settings.video.label"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__2.content"
    },
    {
      "type": "paragraph",
      "content": "t:sections.video.settings.paragraph.content"
    },
    {
      "type": "video_url",
      "id": "video_url",
      "accept": ["youtube", "vimeo"],
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
      "label": "t:sections.video.settings.video_url.label",
      "info": "t:sections.video.settings.video_url.info"
    },
    {
      "type": "image_picker",
      "id": "cover_image",
      "label": "t:sections.video.settings.cover_image.label"
    },
    {
      "type": "text",
      "id": "description",
      "label": "t:sections.video.settings.description.label",
      "info": "t:sections.video.settings.description.info"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__3.content"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.video.settings.full_width.label",
      "default": false
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "t:sections.video.presets.name"
    }
  ]
}
{% endschema %}
